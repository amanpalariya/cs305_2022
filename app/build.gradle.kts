/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

import org.gradle.api.tasks.testing.logging.TestExceptionFormat.*
import org.gradle.api.tasks.testing.logging.TestLogEvent.*

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    jacoco
    id("org.barfuin.gradle.jacocolog") version "2.0.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.2")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1.1-jre")

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation("org.xerial:sqlite-jdbc:3.36.0.3")

    // https://mvnrepository.com/artifact/io.javalin/javalin
    implementation("io.javalin:javalin:4.3.0")

    // https://search.maven.org/artifact/org.slf4j/slf4j-simple/1.8.0-beta4/jar
    implementation("org.slf4j:slf4j-simple:1.8.0-beta4")

    // https://search.maven.org/artifact/com.fasterxml.jackson.core/jackson-databind/2.12.4/bundle
    implementation("com.fasterxml.jackson.core:jackson-databind:2.12.4")
}

application {
    // Define the main class for the application.
    mainClass.set("message_router.App")
}

tasks.test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    testLogging {
        events(PASSED, FAILED, SKIPPED)
    }

    finalizedBy(tasks.jacocoTestReport)
}
